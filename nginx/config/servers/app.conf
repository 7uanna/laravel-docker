# Sets the path and other parameters of a cache
fastcgi_cache_path /var/cache/nginx/app levels=1:2 keys_zone=APP_CACHE:100m inactive=60m;
# Defines a key for caching
fastcgi_cache_key "$scheme://$host:$request_method:$request_uri"; # or "$scheme:$request_method:$host:$uri:$is_args:$args";

##############
#### SSL Certification location
##############

ssl_certificate certs/fullchain.pem;
ssl_certificate_key certs/privkey.pem;

##############
#### TLS Best Practices
##############

# Increase TLS Session Duration.
# Enable session resumption to improve https performance.
# Improve HTTPS performance with session resumption.
ssl_session_timeout 60m;
ssl_session_cache shared:SSL:20m;
ssl_session_tickets off;

# Disable SSL and only Enable TLS in Nginx.
#
# The latest version of the Transport Layer Security (TLS) protocol.
# Allows for data/message confidentiality, and message authentication codes for message integrity and as a by-product message authentication.
ssl_protocols TLSv1.2 TLSv1.3;

# Enables server-side protection from BEAST attacks.
# Enforce Server-Side Cipher Suite Preferences.
ssl_prefer_server_ciphers on;
# Enable Strong TLS Ciphers.
ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;
ssl_ecdh_curve secp521r1:secp384r1;

# Specifies a file with DH parameters for DHE ciphers.
ssl_dhparam certs/dhparam4096.pem;

server {

    # server listen (HTTPS)
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{DOMAIN_APP}} www.{{DOMAIN_APP}};

    # # www to non-www:
    # # Redirect www to non-www
    if ($host ~ ^www\.(?<domain>.+)$) {
        return 301 https://$domain$request_uri;
    }

    root {{APP_PATH_PREFIX}}/{{DOMAIN_APP}}/public;

    error_log /var/log/nginx/{{DOMAIN_APP}}.error.log warn;
    # access_log /var/log/nginx/{{DOMAIN_APP}}.access.log main buffer=16K flush=1m;

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$query_string;

        #### Simple DDoS Defense / LIMITS
        #### Control Simultaneous Connections
        limit_conn conn_limit_per_ip 10;
        limit_req zone=req_limit_per_ip burst=20 nodelay;
    }

    # Deny access to specific files in the root folder
    location ~* (autoload\.php|composer\.(json|lock|phar)|nginx\.conf|web\.config|CONTRIBUTING\.md|eula.*\.txt|license\.txt|LICENSE\.txt|README\.md|UPGRADE-(.*)\.md|.*\.dist)$ {
        log_not_found off;
        deny all;
    }

    # Deny all direct access for these folders
    location ~* /(\.git|bin|logs|backup|tests)/.*$ {
        log_not_found off;
        deny all;
    }

    # Deny all direct access for these folders
    location ~* /(app|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|sh)$ {
        log_not_found off;
        deny all;
    }

    location ~ (^|/)\. { log_not_found off; deny all; }
    location ~ ~$ { log_not_found off; deny all; }

    # Deny access to dotfiles
    # Deny all attempts to access hidden files
    location ~ /\. { log_not_found off; deny all; }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Disables caching for manifest, html, xml and json files.
    location ~* \.(?:manifest|html?|xml|json)$ {
        expires -1;

        # Security HTTP Headers
        include snippets/server/security_http_headers.conf;

        add_header Cache-Control "no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0";
    }

    # Media: images, icons, video, audio | CSS/Javascript/HTML
    location ~* \.(?:jpg|jpeg|gif|png|ico|gz|svg|svgz|mp4|css|js)$ {
        expires 1M;

        # Security HTTP Headers
        include snippets/server/security_http_headers.conf;

        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        add_header Last-Modified $sent_http_Expires;

        # The directive enables or disables messages in error_log about files not found on disk
        log_not_found off;
        access_log off;
    }

    # Cache everything by default
    set $no_cache 0;

    # Only cache GET requests
    if ($request_method != GET) {
        set $no_cache 1;
    }

    # Don't cache if the URL contains a query string
    if ($query_string != "") {
        set $no_cache 1;
    }

    # Don't cache the following URLs
    if ($request_uri ~* "/(dashboard|backend|admin)") {
        set $no_cache 1;
    }

    # Don't cache if there is a cookie called PHPSESSID
    if ($http_cookie ~* "PHPSESSID") {
        set $no_cache 1;
    }

    # If custom header exists
    if ($http_x_custom_header) {
        set $no_cache 1;
    }

    error_page 404 /index.php;

    include snippets/php/php_fpm.conf;

    # # If you feel the need to purge your cache entirely:
    # #     Stop nginx.
    # #     Remove the directory.
    # #     Start ngnix.
    # # The cache is automatically updated and pruned in the background, so you shouldn't need to do so.
    # location ~ /purge(/.*) {
    #     fastcgi_cache_purge APP_CACHE "$scheme://$host:$request_method:$1";
    # }

    # location ~ \.php$ {
    #     fastcgi_cache APP_CACHE;
    #     fastcgi_cache_valid 200 60m; # Only cache 200 responses, cache for 60 minutes
    #     fastcgi_cache_valid 301 302 10m;
    #     fastcgi_cache_use_stale error timeout invalid_header updating http_500;
    #     fastcgi_cache_methods GET HEAD; # Only GET and HEAD methods apply

    #     fastcgi_cache_bypass $no_cache $http_cache_control; # Don't pull from cache based on $no_cache
    #     fastcgi_no_cache $no_cache $http_cache_control; #  Don't save to cache based on $no_cache

    #     fastcgi_keep_conn on;

    #     fastcgi_cache_lock on;
    #     fastcgi_cache_revalidate on;
    #     fastcgi_cache_min_uses 2;
    #     fastcgi_cache_background_update on;

    #     fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

    #     fastcgi_hide_header X-Powered-By;
    #     fastcgi_hide_header Set-Cookie;
    #     fastcgi_hide_header Cookie;

    #     # Regular PHP-FPM stuff:
    #     fastcgi_pass php-fpm:9000;
    #     fastcgi_index index.php;
    #     # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    #     fastcgi_split_path_info ^(.+\.php)(/.+)$;

    #     fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    #     include snippets/php/fastcgi.conf;
    # }
}
